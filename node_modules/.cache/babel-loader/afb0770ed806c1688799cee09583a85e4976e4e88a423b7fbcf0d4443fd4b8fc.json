{"ast":null,"code":"/* must import vue components, as well as any data and geojson files needed*/\n\nimport { InfoControl, ReferenceChart, ChoroplethLayer } from 'vue-choropleth';\n//import { geojson } from './data/py-departments-geojson'\nimport { sdohData } from '../data/sdohData';\nimport ocGeojson from '../data/ocGeoZipCode.json';\nimport { ocMHData } from '../data/avg_data_zipcode';\nimport { weighted_mhi_data } from '../data/weighted_mhi_data';\nimport { weighted_sdoh_data } from '..data/weighted_sdoh_data';\nimport { LMap, LTileLayer } from 'vue2-leaflet';\nexport default {\n  name: \"app\",\n  components: {\n    LMap,\n    LTileLayer,\n    'l-info-control': InfoControl,\n    'l-reference-chart': ReferenceChart,\n    'l-choropleth-layer': ChoroplethLayer\n  },\n  data() {\n    return {\n      /* assign values to all variables that are used above in the map parts, if using OpenStreetMap,\n         copy the values for url and attribution to new map */\n      url: 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png',\n      attribution: '&copy; <a target=\"_blank\" href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors',\n      ocMHData,\n      ocGeojson,\n      sdohData,\n      weighted_sdoh_data,\n      weighted_mhi_data,\n      selectedMap: 'map1',\n      colorScale: [\"71ae46\", \"ebe12a\", \"ac2026\"],\n      /* each map has its own value that they represent, if making a new map, create a new\n         variable as shown here and assign it a key (the data you want to display from the data file),\n         and a metric to represent the data in */\n      foodValue: {\n        key: \"ACS_PCT_HH_NO_FD_STMP_BLW_POV_ZC\",\n        metric: \"Food Stamps\"\n      },\n      ocValue: {\n        key: \"w_mhi_avg\",\n        metric: \"Weighted Mental Health Index Average\"\n      },\n      econValue: {\n        key: \"ACS_PCT_UNEMPLOY_ZC\",\n        metric: \"% Unemployed\"\n      },\n      comValue: {\n        key: \"POS_DIST_CLINIC_ZP\",\n        metric: \"Distance Nearest Health Clinic\"\n      },\n      eduValue: {\n        key: \"ACS_TOT_POP_WT_ZC\",\n        metric: \"% Teens and Adults Unemployed and Not in School\"\n      },\n      wfoodValue: {\n        key: \"w_no_food_stamps\",\n        metric: \"Food Stamps\"\n      },\n      weconValue: {\n        key: \"w_umemployed\",\n        metric: \"% Unemployed\"\n      },\n      wcomValue: {\n        key: \"w_distance_clinic\",\n        metric: \"Distance Nearest Clinic\"\n      },\n      weduValue: {\n        key: \"w_no_school_job\",\n        metric: \"Number Teens and Adults Unemployed and Not in School\"\n      },\n      /* if using OpenStreetMap, leave as true to give credit */\n      mapOptions: {\n        attributionControl: true\n      },\n      currentStrokeColor: '3d3213'\n    };\n  },\n  methods: {\n    updateMap() {}\n  }\n};","map":{"version":3,"names":["InfoControl","ReferenceChart","ChoroplethLayer","sdohData","ocGeojson","ocMHData","weighted_mhi_data","weighted_sdoh_data","LMap","LTileLayer","name","components","data","url","attribution","selectedMap","colorScale","foodValue","key","metric","ocValue","econValue","comValue","eduValue","wfoodValue","weconValue","wcomValue","weduValue","mapOptions","attributionControl","currentStrokeColor","methods","updateMap"],"sources":["src/components/MapPage.vue"],"sourcesContent":["<template>\n    <div>\n      <!--Creates 5 maps that each represent a different metric, can add more as needed-->\n      <input type=\"radio\" id=\"map1\" value=\"map1\" v-model=\"selectedMap\" @change=\"updateMap\">\n      <label for=\"map1\">MHI</label>\n      <input type=\"radio\" id=\"map2\" value=\"map2\" v-model=\"selectedMap\" @change=\"updateMap\">\n      <label for=\"map2\">Food</label>\n      <input type=\"radio\" id=\"map3\" value=\"map3\" v-model=\"selectedMap\" @change=\"updateMap\">\n      <label for=\"map3\">Economic Stability</label>\n      <input type=\"radio\" id=\"map4\" value=\"map4\" v-model=\"selectedMap\" @change=\"updateMap\">\n      <label for=\"map4\">Community and Social Context Stability</label>\n      <input type=\"radio\" id=\"map5\" value=\"map5\" v-model=\"selectedMap\" @change=\"updateMap\">\n      <label for=\"map5\">Education</label>\n      <!--If new map is made, copy l-map and l-tile-layers, but other layers will be different depending on data file used-->\n      <div v-if=\"selectedMap === 'map1'\" id=\"app\">\n        <l-map :center=\"[33.7175, -117.8311]\" :zoom=\"10\" style=\"height: 700px;\" :options=\"mapOptions\">\n          <l-tile-layer :url=\"url\" :attribution=\"attribution\"></l-tile-layer>\n          <!--data links to csv/js data file, titleKey and idKey identify specific column of data\n              value links to specific data value/metric in the data file, geojsonIdKey identifies geojson file\n              for choropleth layer, geojson is file name itself-->\n          <l-choropleth-layer :data=\"weighted_mhi_data\" titleKey=\"zcta\" idKey=\"zcta\" :value=\"ocValue\" geojsonIdKey=\"dpto\" :geojson=\"ocGeojson\" :colorScale=\"colorScale\">\n            <template slot-scope=\"info\">\n                <!--info control is the pop up box on the bottom left; item is the numerical data value of the\n                    current area that is being hovered over, unit is the metric of the data value, for example\n                    MHI map displays Mental Health Index, Economic Map is in percentages, etc.\n                    title is the light grey text that appears at the top indicating the title,\n                    placeholder is placeholder text that appears when not hovering over an area-->\n                <l-info-control :item=\"info.currentItem\" :unit=\"info.unit\" title=\"Zip Code\" placeholder=\"Hover over a zip code\"/>\n                <!--reference chart is the box at the top right of the page, showing the map's explanation and scale\n                    title is the description/title of the current map\n                    colorscale is the scale of colors, by default a green-yellow-red scale\n                    min and max can be copied as they are shown to have the program set\n                    default values for the min and max, which will be the min and max found in the\n                    data respectively-->\n              <l-reference-chart title=\"Mental Health Index Averages by Zip Code\" :colorScale=\"colorScale\" :min=\"info.min\" :max=\"info.max\" position=\"topright\"/>\n            </template>\n          </l-choropleth-layer>\n        </l-map>\n      </div>\n    <div>\n      <div v-if=\"selectedMap === 'map2'\">\n        <l-map :center=\"[33.7175, -117.8311]\" :zoom=\"10\" style=\"height: 700px;\" :options=\"mapOptions\">\n          <l-tile-layer :url=\"url\" :attribution=\"attribution\"></l-tile-layer>\n          <l-choropleth-layer :data=\"sdohData\" titleKey=\"ZIPCODE\" idKey=\"ZCTA\" :value=\"foodValue\" geojsonIdKey=\"dpto\" :geojson=\"ocGeojson\" :colorScale=\"colorScale\">\n            <template slot-scope=\"info\">\n              <l-info-control :item=\"info.currentItem\" :unit=\"info.unit\" title=\"Zip Code\" placeholder=\"Hover over a zip code\"/>\n              <l-reference-chart title=\"Average Percentage of Households not recieving Food Stamps by Zip Code\" :colorScale=\"colorScale\" :min=\"info.min\" :max=\"info.max\" position=\"topright\"/>\n            </template>\n          </l-choropleth-layer>\n        </l-map>\n      </div>\n    </div>\n    <div>\n      <div v-if=\"selectedMap === 'map3'\">\n        <l-map :center=\"[33.7175, -117.8311]\" :zoom=\"10\" style=\"height: 700px;\" :options=\"mapOptions\">\n          <l-tile-layer :url=\"url\" :attribution=\"attribution\"></l-tile-layer>\n          <l-choropleth-layer :data=\"sdohData\" titleKey=\"ZIPCODE\" idKey=\"ZCTA\" :value=\"econValue\" geojsonIdKey=\"dpto\" :geojson=\"ocGeojson\" :colorScale=\"colorScale\">\n            <template slot-scope=\"info\">\n              <l-info-control :item=\"info.currentItem\" :unit=\"info.unit\" title=\"Zip Code\" placeholder=\"Hover over a zip code\"/>\n              <l-reference-chart title=\"Average Percentage of Unemployment (Ages 16+) by Zip Code\" :colorScale=\"colorScale\" :min=\"info.min\" :max=\"info.max\" position=\"topright\"/>\n            </template>\n          </l-choropleth-layer>\n        </l-map>\n      </div>\n    </div>\n    <div>\n      <div v-if=\"selectedMap === 'map4'\">\n        <l-map :center=\"[33.7175, -117.8311]\" :zoom=\"10\" style=\"height: 700px;\" :options=\"mapOptions\">\n          <l-tile-layer :url=\"url\" :attribution=\"attribution\"></l-tile-layer>\n          <l-choropleth-layer :data=\"sdohData\" titleKey=\"ZIPCODE\" idKey=\"ZCTA\" :value=\"comValue\" geojsonIdKey=\"dpto\" :geojson=\"ocGeojson\" :colorScale=\"colorScale\">\n            <template slot-scope=\"info\">\n              <l-info-control :item=\"info.currentItem\" :unit=\"info.unit\" title=\"Zip Code\" placeholder=\"Hover over a zip code\"/>\n              <l-reference-chart title=\"Average Distance to the nearest Health Clinic by Zip Code\" :colorScale=\"colorScale\" :min=\"info.min\" :max=\"info.max\" position=\"topright\"/>\n            </template>\n          </l-choropleth-layer>\n        </l-map>\n      </div>\n    </div>\n    <div>\n      <div v-if=\"selectedMap === 'map5'\">\n        <l-map :center=\"[33.7175, -117.8311]\" :zoom=\"10\" style=\"height: 700px;\" :options=\"mapOptions\">\n          <l-tile-layer :url=\"url\" :attribution=\"attribution\"></l-tile-layer>\n          <l-choropleth-layer :data=\"sdohData\" titleKey=\"ZIPCODE\" idKey=\"ZCTA\" :value=\"eduValue\" geojsonIdKey=\"dpto\" :geojson=\"ocGeojson\" :colorScale=\"colorScale\">\n            <template slot-scope=\"info\">\n              <l-info-control :item=\"info.currentItem\" :unit=\"info.unit\" title=\"Zip Code\" placeholder=\"Hover over a zip code\"/>\n              <l-reference-chart title=\"Average Percent of People (Ages 16-19) Unemployed and Not in School by Zip Code\" :colorScale=\"colorScale\" :min=\"info.min\" :max=\"info.max\" position=\"topright\"/>\n            </template>\n          </l-choropleth-layer>\n        </l-map>\n      </div>\n    </div>\n  </div>\n  </template>\n  \n  <script>\n  /* must import vue components, as well as any data and geojson files needed*/\n\n  import { InfoControl, ReferenceChart, ChoroplethLayer } from 'vue-choropleth'\n  //import { geojson } from './data/py-departments-geojson'\n  import { sdohData } from '../data/sdohData'\n  import ocGeojson from '../data/ocGeoZipCode.json'\n  import { ocMHData } from '../data/avg_data_zipcode'\n  import { weighted_mhi_data } from '../data/weighted_mhi_data'\n  import { weighted_sdoh_data } from '..data/weighted_sdoh_data'\n  import {LMap, LTileLayer} from 'vue2-leaflet';\n  export default {\n    name: \"app\",\n    components: { \n      LMap,\n      LTileLayer,\n      'l-info-control': InfoControl, \n      'l-reference-chart': ReferenceChart, \n      'l-choropleth-layer': ChoroplethLayer \n    },\n    data() {\n        return {\n          /* assign values to all variables that are used above in the map parts, if using OpenStreetMap,\n             copy the values for url and attribution to new map */\n          url: 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png',\n          attribution: '&copy; <a target=\"_blank\" href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors',\n          ocMHData,\n          ocGeojson,\n          sdohData,\n          weighted_sdoh_data,\n          weighted_mhi_data,\n          selectedMap: 'map1',\n          colorScale: [\"71ae46\", \"ebe12a\", \"ac2026\"],\n          /* each map has its own value that they represent, if making a new map, create a new\n             variable as shown here and assign it a key (the data you want to display from the data file),\n             and a metric to represent the data in */\n             foodValue: {\n          key: \"ACS_PCT_HH_NO_FD_STMP_BLW_POV_ZC\",\n          metric: \"Food Stamps\"\n        },\n        ocValue: {\n          key: \"w_mhi_avg\",\n          metric: \"Weighted Mental Health Index Average\"\n        },\n        econValue:{\n          key: \"ACS_PCT_UNEMPLOY_ZC\",\n          metric: \"% Unemployed\"\n        },\n        comValue: {\n          key: \"POS_DIST_CLINIC_ZP\",\n          metric: \"Distance Nearest Health Clinic\"\n        },\n        eduValue: {\n          key: \"ACS_TOT_POP_WT_ZC\",\n          metric: \"% Teens and Adults Unemployed and Not in School\"\n        },\n        wfoodValue: {\n          key: \"w_no_food_stamps\",\n          metric: \"Food Stamps\"\n        },\n        weconValue: {\n          key: \"w_umemployed\",\n          metric: \"% Unemployed\"\n        },\n        wcomValue: {\n          key: \"w_distance_clinic\",\n          metric: \"Distance Nearest Clinic\"\n        },\n        weduValue: {\n          key: \"w_no_school_job\",\n          metric: \"Number Teens and Adults Unemployed and Not in School\"\n        },\n          /* if using OpenStreetMap, leave as true to give credit */\n          mapOptions: {\n            attributionControl: true\n          },\n          currentStrokeColor: '3d3213'\n        }\n      \n    },\n    methods: {\n      updateMap(){\n        \n      }\n    }\n  }\n  </script>\n  <style>\n  body {\n    background-color: #e7d090;\n    margin-left: 0px;\n    margin-right: 0px;\n  }\n  #map {\n    background-color: rgb(0, 0, 0);\n  }\n  .info-control-wrapper {\n    background-color: blueviolet;\n  }\n  </style>"],"mappings":"AA+FA;;AAEA,SAAAA,WAAA,EAAAC,cAAA,EAAAC,eAAA;AACA;AACA,SAAAC,QAAA;AACA,OAAAC,SAAA;AACA,SAAAC,QAAA;AACA,SAAAC,iBAAA;AACA,SAAAC,kBAAA;AACA,SAAAC,IAAA,EAAAC,UAAA;AACA;EACAC,IAAA;EACAC,UAAA;IACAH,IAAA;IACAC,UAAA;IACA,kBAAAT,WAAA;IACA,qBAAAC,cAAA;IACA,sBAAAC;EACA;EACAU,KAAA;IACA;MACA;AACA;MACAC,GAAA;MACAC,WAAA;MACAT,QAAA;MACAD,SAAA;MACAD,QAAA;MACAI,kBAAA;MACAD,iBAAA;MACAS,WAAA;MACAC,UAAA;MACA;AACA;AACA;MACAC,SAAA;QACAC,GAAA;QACAC,MAAA;MACA;MACAC,OAAA;QACAF,GAAA;QACAC,MAAA;MACA;MACAE,SAAA;QACAH,GAAA;QACAC,MAAA;MACA;MACAG,QAAA;QACAJ,GAAA;QACAC,MAAA;MACA;MACAI,QAAA;QACAL,GAAA;QACAC,MAAA;MACA;MACAK,UAAA;QACAN,GAAA;QACAC,MAAA;MACA;MACAM,UAAA;QACAP,GAAA;QACAC,MAAA;MACA;MACAO,SAAA;QACAR,GAAA;QACAC,MAAA;MACA;MACAQ,SAAA;QACAT,GAAA;QACAC,MAAA;MACA;MACA;MACAS,UAAA;QACAC,kBAAA;MACA;MACAC,kBAAA;IACA;EAEA;EACAC,OAAA;IACAC,UAAA,GAEA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}